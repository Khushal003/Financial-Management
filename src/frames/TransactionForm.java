/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class TransactionForm extends javax.swing.JFrame implements Main {

    private String id;
    private int index;
    

    /**
     * Creates new form TransactionForm
     */
    public TransactionForm() {
        initComponents();
        setTableData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        useridTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        amountTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        categoryComboBox = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        descriptionTextField = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        trancsactionTable = new javax.swing.JTable();
        homepageButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Perpetua Titling MT", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MANAGE TRANSACTION");

        jPanel2.setLayout(new java.awt.GridLayout(5, 1, 10, 10));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("USERNAME/EMAIL");
        jPanel2.add(jLabel7);

        useridTextField.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        jPanel2.add(useridTextField);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("AMOUNT");
        jPanel2.add(jLabel8);

        amountTextField.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        jPanel2.add(amountTextField);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("CATEGORY");
        jPanel2.add(jLabel9);

        categoryComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Select---", "Groceries ", "Entertainment", "Utilities", "Rent  " }));
        jPanel2.add(categoryComboBox);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("DESCRIPTION");
        jPanel2.add(jLabel11);

        descriptionTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel2.add(descriptionTextField);

        jPanel5.setLayout(new java.awt.GridLayout(1, 4, 10, 10));

        addButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        addButton.setText("ADD TRANSACTION");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        jPanel5.add(addButton);

        editButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        editButton.setText("EDIT TRANSCATION");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });
        jPanel5.add(editButton);

        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        deleteButton.setText("DELETE TRANSACTION");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        jPanel5.add(deleteButton);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("RESET");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton1);

        trancsactionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        trancsactionTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                trancsactionTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(trancsactionTable);

        homepageButton.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        homepageButton.setText("BACK TO HOMEPAGE");
        homepageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homepageButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(255, 255, 255)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(homepageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(homepageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1068, 787));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        try {
            if (id == null) {
                JOptionPane.showMessageDialog(this, "Please Select Record To Delete ", "Project ", JOptionPane.ERROR_MESSAGE);
            } else {

                Statement smt = con.createStatement();
                smt.execute("delete from transactions where id = " + id);
                JOptionPane.showMessageDialog(this, "Record Deleted", "Project", JOptionPane.INFORMATION_MESSAGE);
                smt.close();
                setTableData();

                resetData();

            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex, "Project", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void trancsactionTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trancsactionTableMouseClicked
        try {
            id = trancsactionTable.getValueAt(trancsactionTable.getSelectedRow(), 0).toString();
            Statement smt = con.createStatement();
            ResultSet rs = smt.executeQuery("select * from transactions where id = " + id);
            
            if (rs.next()) {
                useridTextField.setText(rs.getString("name"));
                amountTextField.setText(rs.getInt("amount") + "");
                categoryComboBox.setSelectedIndex(index);
                descriptionTextField.setText(rs.getString("description"));
            }
            rs.close();
            smt.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e, "Record Envalid", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_trancsactionTableMouseClicked

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        try {
            String name = useridTextField.getText().toUpperCase();
            String amount = amountTextField.getText();
            String category = categoryComboBox.getSelectedItem().toString();
            Statement smt = con.createStatement();
//            ResultSet categorys = smt.executeQuery("select category from transactions ");
            String description = descriptionTextField.getText();
            if (name.isEmpty() || amount.isEmpty() || category.isEmpty() || description.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Enter valid input", "Transaction", JOptionPane.INFORMATION_MESSAGE);
            } else {
//                Statement smt = con.createStatement();
                smt.execute("Insert into transactions(name,amount,category,description) values ('" + name + "'," + amount + ",'" + category + "','" + description + "')");
                JOptionPane.showMessageDialog(this, "Transaction Submitted Successfully", "Transaction", JOptionPane.INFORMATION_MESSAGE);
                smt.close();
                //====to show table of jdbc
                setTableData();
                resetData();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex, "Invalid option", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        try {
            if (id == null) {
                JOptionPane.showMessageDialog(this, "Please Select Record ", "Project ", JOptionPane.ERROR_MESSAGE);
            } else {
                String name = useridTextField.getText().toUpperCase();
                String amount = amountTextField.getText();
                String category = categoryComboBox.getSelectedItem().toString();
                String description = descriptionTextField.getText();
                if (name.isEmpty() || amount.isEmpty() || description.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Invalid Entry", "Project", JOptionPane.ERROR_MESSAGE);
                } else {
                    Statement smt = con.createStatement();
                    smt.execute("UPDATE transactions SET name ='" + name + "', amount = " + amount + ",category = '" + category + "', description = '" + description + "' WHERE id = " + id);
                    JOptionPane.showMessageDialog(this, "Record Updated", "Project", JOptionPane.INFORMATION_MESSAGE);
                    smt.close();
                    setTableData();
                    resetData();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e, "Project", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        resetData();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    private void homepageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homepageButtonActionPerformed
        this.dispose();
        new mainDashBoard().setVisible(true);
    }//GEN-LAST:event_homepageButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransactionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransactionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransactionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransactionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TransactionForm().setVisible(true);
            }
        });
    }

    private void resetData() {
        useridTextField.setText("");
        amountTextField.setText("");
        categoryComboBox.setSelectedIndex(0);
        descriptionTextField.setText("");
        id = null;
    }

    private void setTableData() {
        try {
            Statement smt = con.createStatement();
            ResultSet rs = smt.executeQuery("select * from transactions ");
            rs.last();
            int lastRow = rs.getRow();
            String[] col = {"ID", "NAME", "AMOUNT", "CATEGORY", "DESCRIPTION"};
            int row = rs.getRow();
            String[][] data = new String[lastRow][col.length];
            rs.beforeFirst();
            int i = 0;
            while (rs.next()) {
                data[i][0] = rs.getInt("id") + "";
                data[i][1] = rs.getString("name");
                data[i][2] = rs.getInt("amount") + "";
                data[i][3] = rs.getString("category");
                data[i][4] = rs.getString("description");
                i++;
            }
            DefaultTableModel model1 = new DefaultTableModel(data, col);
            trancsactionTable.setModel(model1);

        } catch (Exception e) {
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField amountTextField;
    private javax.swing.JComboBox<String> categoryComboBox;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField descriptionTextField;
    private javax.swing.JButton editButton;
    private javax.swing.JButton homepageButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable trancsactionTable;
    private javax.swing.JTextField useridTextField;
    // End of variables declaration//GEN-END:variables
}
